from flask import Flask, request, jsonify, render_template ,  send_from_directory
import pandas as pd
import numpy as np
import pickle
app = Flask(__name__)
model = pickle.load(open('model.pkl', 'rb'))

@app.route('/')
def index():
    return render_template('index.html')
@app.route('/musicgenre', methods=["GET", "POST"])
def musicgenre():
    if request.method == "POST":
        l=[]
        Class_name = ['blues','classical','country','disco','hiphop','jazz','metal','pop','reggae','rock']
        chroma_stft = float(request.form["chroma_stft"])
        l.append(chroma_stft)
        rmse = float(request.form["rmse"])
        l.append(rmse)
        spectral_centroid = float(request.form["spectral_centroid"])
        l.append(spectral_centroid)
        spectral_bandwidth = float(request.form["spectral_bandwidth"])
        l.append(spectral_bandwidth)
        rolloff = float(request.form["rolloff"])
        l.append(rolloff)
        zero_crossing_rate = float(request.form["zero_crossing_rate"])
        l.append(zero_crossing_rate)
        mfcc1 = float(request.form["mfcc1"])
        l.append(mfcc1)
        mfcc2 = float(request.form["mfcc2"])
        l.append(mfcc2)
        mfcc3 = float(request.form["mfcc3"])
        l.append(mfcc3)
        mfcc4 = float(request.form["mfcc4"])
        l.append(mfcc4)
        mfcc5 = float(request.form["mfcc5"])
        l.append(mfcc5)
        mfcc6 = float(request.form["mfcc6"])
        l.append(mfcc6)
        mfcc7 = float(request.form["mfcc7"])
        l.append(mfcc7)
        mfcc8 = float(request.form["mfcc8"])
        l.append(mfcc8)
        mfcc9 = float(request.form["mfcc9"])
        l.append(mfcc9)
        mfcc10 = float(request.form["mfcc10"])
        l.append(mfcc10)
        mfcc11 = float(request.form["mfcc11"])
        l.append(mfcc11)
        mfcc12 = float(request.form["mfcc12"])
        l.append(mfcc12)
        mfcc13 = float(request.form["mfcc13"])
        l.append(mfcc13)
        mfcc14 = float(request.form["mfcc14"])
        l.append(mfcc14)
        mfcc15 = float(request.form["mfcc15"])
        l.append(mfcc15)
        mfcc16 = float(request.form["mfcc16"])
        l.append(mfcc16)
        mfcc17 = float(request.form["mfcc17"])
        l.append(mfcc17)
        mfcc18 = float(request.form["mfcc18"])
        l.append(mfcc18)
        mfcc19 = float(request.form["mfcc19"])
        l.append(mfcc19)
        mfcc20 = float(request.form["mfcc20"])
        l.append(mfcc20)
        arr = np.array([l])
        prediction = model.predict(arr)
        output = round(prediction[0], 2)
        return render_template('musicgenre.html',predict='Music is of genre : {}'.format(output),label=str(Class_name[output]))
    return render_template("musicgenre.html",predict=None)

if __name__ == '__main__':
    app.run()